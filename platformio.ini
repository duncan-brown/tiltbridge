; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html



[common]
platform = espressif32
; I had to use these platforms at various stages of development - leaving them here in case I need them later
;platform = https://github.com/platformio/platform-espressif32.git#feature/stage
;platform = https://github.com/platformio/platform-espressif32.git
board = lolin_d32
framework = arduino
; As the framework has grown, min_spiffs no longer has enough space. We're now requiring 16MB of flash space for most
; builds (which comes standard with the recommended D32 Pro)
board_build.partitions = large_spiffs_16MB.csv


; Let's also include some other common build flags for ease-of-use
upload_speed = 921600
monitor_speed = 115200
; These are true for most of the TFT devices on MacOS - Will likely need to be changed if compiling on other platforms
upload_port = /dev/cu.wch*
monitor_port = /dev/cu.wch*
; These are true for a good chunk of the OLED devices I've tried on MacOS. Again - probably won't work for other platforms.
;upload_port = /dev/cu.SLAB_USBtoUART
;monitor_port = /dev/cu.SLAB_USBtoUART

; -D_GLIBCXX_USE_C99 is to fix an issue with the xtensa toolchain that precludes the use of std::to_string
; See: https://github.com/espressif/esp-idf/issues/1445
build_flags =
    -D_GLIBCXX_USE_C99

lib_deps =
    https://github.com/tzapu/WiFiManager#development
    https://github.com/h2zero/NimBLE-Arduino.git



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Individual build configurations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:lcd_ssd1306]
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}
; For the "OLED" variant, we can't guarantee we have more than 4MB of flash. Use huge_app to get us the space - but
; at the cost of being able to update OTA.
board_build.partitions = huge_app.csv
build_flags =
    ${common.build_flags}
    -DLCD_SSD1306
    -DDISABLE_OTA_UPDATES
lib_deps =
    ${common.lib_deps}
    ESP8266_SSD1306
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
monitor_port = ${common.monitor_port}



[env:d32_pro_tft]
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}
board_build.partitions = ${common.board_build.partitions}
build_flags =
    ${common.build_flags}
    -DLCD_TFT
;    -DCORE_DEBUG_LEVEL=5
lib_deps =
    ${common.lib_deps}
    Adafruit GFX Library
    Adafruit ILI9341
    https://github.com/PaulStoffregen/XPT2046_Touchscreen
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
monitor_port = ${common.monitor_port}

